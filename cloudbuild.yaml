steps:
  # ステップ1: Dockerイメージのビルド
  - name: 'gcr.io/cloud-builders/docker'
    args: [
        'build',
        '-t',
        # ★ Artifact Registry パス (リージョン, プロジェクトID, リポジトリ名 は設定が必要な場合が多い) ★
        # リージョンは省略可能だが明示推奨。PROJECT_IDは自動置換される。
        # リポジトリ名、イメージ名は自分で決める必要がある。
        'asia-northeast1-docker.pkg.dev/$PROJECT_ID/streamlit-apps/chat-app:$COMMIT_SHA', # タグにコミットSHAを使う例
        '.'
      ]
    id: 'Build'

  # ステップ2: Artifact Registry へのイメージプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/streamlit-apps/chat-app:$COMMIT_SHA']
    id: 'Push'
    waitFor: ['Build']

  # ステップ3: Cloud Run へのデプロイ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: gcloud
    args: [
        'run', 'deploy',
        # ★ サービス名 (自分で決める必要あり) ★
        'streamlit-chat',
        # ★ イメージ名 (ステップ1, 2 と合わせる) ★
        '--image=asia-northeast1-docker.pkg.dev/$PROJECT_ID/streamlit-apps/chat-app:$COMMIT_SHA',
        # ★ リージョン (省略可能だが明示推奨) ★
        '--region=asia-northeast1',
        '--platform=managed',
        '--allow-unauthenticated',
        # ★ Secret名 (自分で決めたものを指定) ★
        '--set-secrets=/secrets/sa-key.json=firestore-sa-key:latest',
        # 環境変数とマウントパス
        '--set-env-vars=GOOGLE_APPLICATION_CREDENTIALS=/secrets/sa-key.json',
        # スケーリング設定
        '--min-instances=0',
        '--max-instances=1',
        # ★ サービスアカウント (省略可能、省略時はCompute EngineデフォルトSA) ★
        # 推奨: '--service-account=$PROJECT_NUMBER@cloudbuild.gserviceaccount.com'
        # $PROJECT_NUMBER は自動置換される組み込み変数
        '--service-account=$PROJECT_NUMBER@cloudbuild.gserviceaccount.com'
      ]
    id: 'Deploy'
    waitFor: ['Push']

# ビルド成果物のイメージ名
images:
  - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/streamlit-apps/chat-app:$COMMIT_SHA'

# (オプション) ログ設定
# options:
#   logging: CLOUD_LOGGING_ONLY
